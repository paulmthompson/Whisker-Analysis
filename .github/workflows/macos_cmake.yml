name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - {"os": macos-13, short: mac-amd64, compiler: clang, shell: bash}
          - {"os": macos-latest, short: mac-arm64, compiler: clang, shell: bash}

    runs-on: ${{matrix.os}}

    env:
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    defaults:
      run:
        shell: '${{ matrix.shell }} {0}'

    steps:
      - uses: actions/checkout@v4

      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'f7423ee180c4b7f40d43402c2feb3859161ef625'

      - name: Set up Homebrew
        id: set-up-homebrew
        if: runner.os == 'macOS'
        uses: Homebrew/actions/setup-homebrew@master

      - uses: actions/setup-python@v5
        with:
            python-version: '3.10'

      - name: Install python dependencies Unix
        run: python -m pip install --upgrade pip pytest numpy

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: "Install Mac System Dependencies"
        run: |
          brew install libomp
          echo "OpenMP_ROOT=$(brew --prefix libomp)" >> $GITHUB_ENV

      - name: Configure CMake without coverage for all other runners (does not equal gcc AND Linux)
        run: |
            cmake --preset ${{matrix.short}}-${{matrix.compiler}}-release -DPython3_ROOT_DIR="${{ env.pythonLocation }}"

      - name: Build
        run: cmake --build --preset ${{matrix.short}}-${{matrix.compiler}}-release -DPython3_ROOT_DIR="${{ env.pythonLocation }}"

      - name: Test
        run: ctest --verbose --preset ${{matrix.short}}-${{matrix.compiler}}-release -C ${{matrix.short}}-${{matrix.compiler}}-release -DPython3_ROOT_DIR="${{ env.pythonLocation }}"
        working-directory: ${{ github.workspace }}

