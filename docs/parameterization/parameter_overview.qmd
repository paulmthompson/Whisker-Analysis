---
title: "Parameterization Overview"
---

## Whisker Pad

Rodent whiskers (vibrissa) are specialized hair follicles on the face. The position of these whiskers are organized in a highly stereotyped grid with rows and columns. The most posterior whiskers are slightly offset from the rest of the grid and are labeled with Greek letters from dorsal to ventral: alpha, beta, gamma, delta. The remaining whiskers are labeled with rows A-E, with A the most dorsal, and columns numbered starting from the most posterior.

Figure: side profile of whiskers

## Whisker Structure

Whiskers are truncated cones. More posterior whiskers are generally longer and greater in diameter than more anterior whiskers.

Figure: 3d structure of whisker

## 2D Whisker Imaging

Whiskers are usually imaged in behavioral preparation with strong backlighting, such that they appear as dark shadows across a white background.

Figure: Cartoon of whisker from top view

A whisker is defined as a collection of points

$(x_1,y_1), (x_2,y_2), ... (x_n,y_n)$

These points are **ordered** to define a path along the whisker. We will define the first point as being most proximal, while the last point is most distal.

The spacing between these points may not be uniform, and segments of the whisker may be missing.

## Converting Whisker Masks to Paths

Traditional whisker tracing algorithms will result in a path of points, where increasing indices correspond to either increasing or decreasing distance along the whisker. However, some image processing algorithms, including deep learning, will result in a collection of pixels corresponding to the pixels likely to correspond to a whisker in a picture. *These will not be ordered as a path*. Consequently,

### Regression Fit

::: callout-caution
## Beware when paths are not monotonically increasing in x/y

Figure: Demonstration of problematic whisker
:::

### Nearest Neighbors

## Whisker Data Structure

Whiskers are an array of 2D points

Whiskers can correspond to to whisker IDs

Whiskers can correspond to certain frames

HDF5 for saving / loading

### Python

### Julia

### C++
